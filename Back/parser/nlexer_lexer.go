// Code generated from Nlexer.g4 by ANTLR 4.9.3. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 91, 592,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 4, 42, 9, 42, 4, 43, 9, 43, 4, 44,
	9, 44, 4, 45, 9, 45, 4, 46, 9, 46, 4, 47, 9, 47, 4, 48, 9, 48, 4, 49, 9,
	49, 4, 50, 9, 50, 4, 51, 9, 51, 4, 52, 9, 52, 4, 53, 9, 53, 4, 54, 9, 54,
	4, 55, 9, 55, 4, 56, 9, 56, 4, 57, 9, 57, 4, 58, 9, 58, 4, 59, 9, 59, 4,
	60, 9, 60, 4, 61, 9, 61, 4, 62, 9, 62, 4, 63, 9, 63, 4, 64, 9, 64, 4, 65,
	9, 65, 4, 66, 9, 66, 4, 67, 9, 67, 4, 68, 9, 68, 4, 69, 9, 69, 4, 70, 9,
	70, 4, 71, 9, 71, 4, 72, 9, 72, 4, 73, 9, 73, 4, 74, 9, 74, 4, 75, 9, 75,
	4, 76, 9, 76, 4, 77, 9, 77, 4, 78, 9, 78, 4, 79, 9, 79, 4, 80, 9, 80, 4,
	81, 9, 81, 4, 82, 9, 82, 4, 83, 9, 83, 4, 84, 9, 84, 4, 85, 9, 85, 4, 86,
	9, 86, 4, 87, 9, 87, 4, 88, 9, 88, 4, 89, 9, 89, 4, 90, 9, 90, 3, 2, 3,
	2, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 4, 3, 4, 3,
	4, 3, 5, 3, 5, 3, 5, 3, 5, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 7, 3, 7, 3,
	7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 9, 3,
	9, 3, 9, 3, 9, 3, 9, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 11, 3, 11, 3,
	11, 3, 11, 3, 12, 3, 12, 3, 12, 3, 13, 3, 13, 3, 13, 3, 13, 3, 14, 3, 14,
	3, 14, 3, 14, 3, 15, 3, 15, 3, 15, 3, 15, 3, 16, 3, 16, 3, 16, 3, 16, 3,
	17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 18, 3, 18, 3, 18, 3, 18,
	3, 18, 3, 18, 3, 18, 3, 18, 3, 18, 3, 18, 3, 19, 3, 19, 3, 19, 3, 19, 3,
	19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 21,
	3, 21, 3, 21, 3, 21, 3, 21, 3, 21, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3,
	22, 3, 22, 3, 22, 3, 23, 3, 23, 3, 23, 3, 24, 3, 24, 3, 24, 3, 24, 3, 25,
	3, 25, 3, 25, 3, 25, 3, 25, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3,
	27, 3, 27, 3, 27, 3, 27, 3, 28, 3, 28, 3, 28, 3, 28, 3, 29, 3, 29, 3, 29,
	3, 29, 3, 29, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 3, 31, 3,
	31, 3, 31, 3, 31, 3, 31, 3, 31, 3, 31, 3, 31, 3, 31, 3, 32, 3, 32, 3, 32,
	3, 32, 3, 32, 3, 32, 3, 32, 3, 33, 3, 33, 3, 33, 3, 33, 3, 33, 3, 33, 3,
	33, 3, 33, 3, 33, 3, 34, 3, 34, 3, 34, 3, 34, 3, 34, 3, 34, 3, 34, 3, 34,
	3, 34, 3, 34, 3, 34, 3, 34, 3, 34, 3, 34, 3, 35, 3, 35, 3, 35, 3, 36, 3,
	36, 3, 36, 3, 36, 3, 36, 3, 37, 3, 37, 3, 37, 3, 37, 3, 37, 3, 37, 3, 38,
	3, 38, 3, 38, 3, 38, 3, 38, 3, 39, 3, 39, 3, 39, 3, 39, 3, 39, 3, 39, 3,
	40, 3, 40, 3, 40, 3, 40, 3, 41, 3, 41, 3, 41, 3, 42, 3, 42, 3, 42, 3, 42,
	3, 42, 3, 42, 3, 42, 3, 43, 3, 43, 3, 43, 3, 43, 3, 43, 3, 43, 3, 44, 3,
	44, 3, 44, 3, 44, 3, 44, 3, 44, 3, 44, 3, 44, 3, 44, 3, 45, 3, 45, 3, 45,
	3, 45, 3, 46, 3, 46, 3, 46, 3, 46, 3, 47, 6, 47, 436, 10, 47, 13, 47, 14,
	47, 437, 3, 48, 6, 48, 441, 10, 48, 13, 48, 14, 48, 442, 3, 48, 3, 48,
	6, 48, 447, 10, 48, 13, 48, 14, 48, 448, 3, 49, 3, 49, 7, 49, 453, 10,
	49, 12, 49, 14, 49, 456, 11, 49, 3, 50, 5, 50, 459, 10, 50, 3, 50, 7, 50,
	462, 10, 50, 12, 50, 14, 50, 465, 11, 50, 3, 51, 3, 51, 3, 52, 3, 52, 3,
	53, 3, 53, 3, 53, 3, 54, 3, 54, 3, 55, 3, 55, 3, 55, 3, 56, 3, 56, 3, 56,
	3, 57, 3, 57, 3, 57, 3, 58, 3, 58, 3, 59, 3, 59, 3, 59, 3, 60, 3, 60, 3,
	61, 3, 61, 3, 62, 3, 62, 3, 63, 3, 63, 3, 63, 3, 64, 3, 64, 3, 65, 3, 65,
	3, 65, 3, 66, 3, 66, 3, 67, 3, 67, 3, 67, 3, 68, 3, 68, 3, 68, 3, 69, 3,
	69, 3, 69, 3, 70, 3, 70, 3, 71, 3, 71, 3, 72, 3, 72, 3, 73, 3, 73, 3, 74,
	3, 74, 3, 74, 3, 75, 3, 75, 3, 76, 3, 76, 3, 77, 3, 77, 3, 78, 3, 78, 3,
	79, 3, 79, 3, 80, 3, 80, 3, 81, 3, 81, 3, 82, 3, 82, 3, 83, 3, 83, 3, 84,
	3, 84, 3, 85, 3, 85, 7, 85, 548, 10, 85, 12, 85, 14, 85, 551, 11, 85, 3,
	85, 3, 85, 3, 86, 3, 86, 3, 87, 3, 87, 3, 87, 3, 87, 3, 88, 6, 88, 562,
	10, 88, 13, 88, 14, 88, 563, 3, 88, 3, 88, 3, 89, 3, 89, 3, 89, 3, 89,
	7, 89, 572, 10, 89, 12, 89, 14, 89, 575, 11, 89, 3, 89, 3, 89, 3, 89, 3,
	89, 3, 89, 3, 90, 3, 90, 3, 90, 3, 90, 7, 90, 586, 10, 90, 12, 90, 14,
	90, 589, 11, 90, 3, 90, 3, 90, 4, 549, 573, 2, 91, 3, 3, 5, 4, 7, 5, 9,
	6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25, 14, 27, 15,
	29, 16, 31, 17, 33, 18, 35, 19, 37, 20, 39, 21, 41, 22, 43, 23, 45, 24,
	47, 25, 49, 26, 51, 27, 53, 28, 55, 29, 57, 30, 59, 31, 61, 32, 63, 33,
	65, 34, 67, 35, 69, 36, 71, 37, 73, 38, 75, 39, 77, 40, 79, 41, 81, 42,
	83, 43, 85, 44, 87, 45, 89, 46, 91, 47, 93, 48, 95, 49, 97, 50, 99, 51,
	101, 52, 103, 53, 105, 54, 107, 55, 109, 56, 111, 57, 113, 58, 115, 59,
	117, 60, 119, 61, 121, 62, 123, 63, 125, 64, 127, 65, 129, 66, 131, 67,
	133, 68, 135, 69, 137, 70, 139, 71, 141, 72, 143, 73, 145, 74, 147, 75,
	149, 76, 151, 77, 153, 78, 155, 79, 157, 80, 159, 81, 161, 82, 163, 83,
	165, 84, 167, 85, 169, 86, 171, 87, 173, 88, 175, 89, 177, 90, 179, 91,
	3, 2, 9, 3, 2, 50, 59, 3, 2, 67, 92, 5, 2, 50, 59, 67, 92, 99, 124, 6,
	2, 50, 59, 67, 92, 97, 97, 99, 124, 3, 2, 66, 296, 6, 2, 11, 12, 15, 15,
	34, 34, 94, 94, 4, 2, 12, 12, 15, 15, 2, 600, 2, 3, 3, 2, 2, 2, 2, 5, 3,
	2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13,
	3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2,
	21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2,
	2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2,
	2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2,
	2, 2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 51, 3,
	2, 2, 2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 2, 59,
	3, 2, 2, 2, 2, 61, 3, 2, 2, 2, 2, 63, 3, 2, 2, 2, 2, 65, 3, 2, 2, 2, 2,
	67, 3, 2, 2, 2, 2, 69, 3, 2, 2, 2, 2, 71, 3, 2, 2, 2, 2, 73, 3, 2, 2, 2,
	2, 75, 3, 2, 2, 2, 2, 77, 3, 2, 2, 2, 2, 79, 3, 2, 2, 2, 2, 81, 3, 2, 2,
	2, 2, 83, 3, 2, 2, 2, 2, 85, 3, 2, 2, 2, 2, 87, 3, 2, 2, 2, 2, 89, 3, 2,
	2, 2, 2, 91, 3, 2, 2, 2, 2, 93, 3, 2, 2, 2, 2, 95, 3, 2, 2, 2, 2, 97, 3,
	2, 2, 2, 2, 99, 3, 2, 2, 2, 2, 101, 3, 2, 2, 2, 2, 103, 3, 2, 2, 2, 2,
	105, 3, 2, 2, 2, 2, 107, 3, 2, 2, 2, 2, 109, 3, 2, 2, 2, 2, 111, 3, 2,
	2, 2, 2, 113, 3, 2, 2, 2, 2, 115, 3, 2, 2, 2, 2, 117, 3, 2, 2, 2, 2, 119,
	3, 2, 2, 2, 2, 121, 3, 2, 2, 2, 2, 123, 3, 2, 2, 2, 2, 125, 3, 2, 2, 2,
	2, 127, 3, 2, 2, 2, 2, 129, 3, 2, 2, 2, 2, 131, 3, 2, 2, 2, 2, 133, 3,
	2, 2, 2, 2, 135, 3, 2, 2, 2, 2, 137, 3, 2, 2, 2, 2, 139, 3, 2, 2, 2, 2,
	141, 3, 2, 2, 2, 2, 143, 3, 2, 2, 2, 2, 145, 3, 2, 2, 2, 2, 147, 3, 2,
	2, 2, 2, 149, 3, 2, 2, 2, 2, 151, 3, 2, 2, 2, 2, 153, 3, 2, 2, 2, 2, 155,
	3, 2, 2, 2, 2, 157, 3, 2, 2, 2, 2, 159, 3, 2, 2, 2, 2, 161, 3, 2, 2, 2,
	2, 163, 3, 2, 2, 2, 2, 165, 3, 2, 2, 2, 2, 167, 3, 2, 2, 2, 2, 169, 3,
	2, 2, 2, 2, 171, 3, 2, 2, 2, 2, 173, 3, 2, 2, 2, 2, 175, 3, 2, 2, 2, 2,
	177, 3, 2, 2, 2, 2, 179, 3, 2, 2, 2, 3, 181, 3, 2, 2, 2, 5, 186, 3, 2,
	2, 2, 7, 191, 3, 2, 2, 2, 9, 195, 3, 2, 2, 2, 11, 199, 3, 2, 2, 2, 13,
	204, 3, 2, 2, 2, 15, 211, 3, 2, 2, 2, 17, 217, 3, 2, 2, 2, 19, 222, 3,
	2, 2, 2, 21, 227, 3, 2, 2, 2, 23, 231, 3, 2, 2, 2, 25, 234, 3, 2, 2, 2,
	27, 238, 3, 2, 2, 2, 29, 242, 3, 2, 2, 2, 31, 246, 3, 2, 2, 2, 33, 250,
	3, 2, 2, 2, 35, 257, 3, 2, 2, 2, 37, 267, 3, 2, 2, 2, 39, 276, 3, 2, 2,
	2, 41, 281, 3, 2, 2, 2, 43, 287, 3, 2, 2, 2, 45, 295, 3, 2, 2, 2, 47, 298,
	3, 2, 2, 2, 49, 302, 3, 2, 2, 2, 51, 307, 3, 2, 2, 2, 53, 313, 3, 2, 2,
	2, 55, 317, 3, 2, 2, 2, 57, 321, 3, 2, 2, 2, 59, 326, 3, 2, 2, 2, 61, 333,
	3, 2, 2, 2, 63, 342, 3, 2, 2, 2, 65, 349, 3, 2, 2, 2, 67, 358, 3, 2, 2,
	2, 69, 372, 3, 2, 2, 2, 71, 375, 3, 2, 2, 2, 73, 380, 3, 2, 2, 2, 75, 386,
	3, 2, 2, 2, 77, 391, 3, 2, 2, 2, 79, 397, 3, 2, 2, 2, 81, 401, 3, 2, 2,
	2, 83, 404, 3, 2, 2, 2, 85, 411, 3, 2, 2, 2, 87, 417, 3, 2, 2, 2, 89, 426,
	3, 2, 2, 2, 91, 430, 3, 2, 2, 2, 93, 435, 3, 2, 2, 2, 95, 440, 3, 2, 2,
	2, 97, 450, 3, 2, 2, 2, 99, 458, 3, 2, 2, 2, 101, 466, 3, 2, 2, 2, 103,
	468, 3, 2, 2, 2, 105, 470, 3, 2, 2, 2, 107, 473, 3, 2, 2, 2, 109, 475,
	3, 2, 2, 2, 111, 478, 3, 2, 2, 2, 113, 481, 3, 2, 2, 2, 115, 484, 3, 2,
	2, 2, 117, 486, 3, 2, 2, 2, 119, 489, 3, 2, 2, 2, 121, 491, 3, 2, 2, 2,
	123, 493, 3, 2, 2, 2, 125, 495, 3, 2, 2, 2, 127, 498, 3, 2, 2, 2, 129,
	500, 3, 2, 2, 2, 131, 503, 3, 2, 2, 2, 133, 505, 3, 2, 2, 2, 135, 508,
	3, 2, 2, 2, 137, 511, 3, 2, 2, 2, 139, 514, 3, 2, 2, 2, 141, 516, 3, 2,
	2, 2, 143, 518, 3, 2, 2, 2, 145, 520, 3, 2, 2, 2, 147, 522, 3, 2, 2, 2,
	149, 525, 3, 2, 2, 2, 151, 527, 3, 2, 2, 2, 153, 529, 3, 2, 2, 2, 155,
	531, 3, 2, 2, 2, 157, 533, 3, 2, 2, 2, 159, 535, 3, 2, 2, 2, 161, 537,
	3, 2, 2, 2, 163, 539, 3, 2, 2, 2, 165, 541, 3, 2, 2, 2, 167, 543, 3, 2,
	2, 2, 169, 545, 3, 2, 2, 2, 171, 554, 3, 2, 2, 2, 173, 556, 3, 2, 2, 2,
	175, 561, 3, 2, 2, 2, 177, 567, 3, 2, 2, 2, 179, 581, 3, 2, 2, 2, 181,
	182, 7, 100, 2, 2, 182, 183, 7, 113, 2, 2, 183, 184, 7, 113, 2, 2, 184,
	185, 7, 110, 2, 2, 185, 4, 3, 2, 2, 2, 186, 187, 7, 101, 2, 2, 187, 188,
	7, 106, 2, 2, 188, 189, 7, 99, 2, 2, 189, 190, 7, 116, 2, 2, 190, 6, 3,
	2, 2, 2, 191, 192, 7, 104, 2, 2, 192, 193, 7, 56, 2, 2, 193, 194, 7, 54,
	2, 2, 194, 8, 3, 2, 2, 2, 195, 196, 7, 107, 2, 2, 196, 197, 7, 56, 2, 2,
	197, 198, 7, 54, 2, 2, 198, 10, 3, 2, 2, 2, 199, 200, 7, 40, 2, 2, 200,
	201, 7, 117, 2, 2, 201, 202, 7, 118, 2, 2, 202, 203, 7, 116, 2, 2, 203,
	12, 3, 2, 2, 2, 204, 205, 7, 85, 2, 2, 205, 206, 7, 118, 2, 2, 206, 207,
	7, 116, 2, 2, 207, 208, 7, 107, 2, 2, 208, 209, 7, 112, 2, 2, 209, 210,
	7, 105, 2, 2, 210, 14, 3, 2, 2, 2, 211, 212, 7, 119, 2, 2, 212, 213, 7,
	117, 2, 2, 213, 214, 7, 107, 2, 2, 214, 215, 7, 124, 2, 2, 215, 216, 7,
	103, 2, 2, 216, 16, 3, 2, 2, 2, 217, 218, 7, 111, 2, 2, 218, 219, 7, 99,
	2, 2, 219, 220, 7, 107, 2, 2, 220, 221, 7, 112, 2, 2, 221, 18, 3, 2, 2,
	2, 222, 223, 7, 114, 2, 2, 223, 224, 7, 113, 2, 2, 224, 225, 7, 121, 2,
	2, 225, 226, 7, 104, 2, 2, 226, 20, 3, 2, 2, 2, 227, 228, 7, 114, 2, 2,
	228, 229, 7, 113, 2, 2, 229, 230, 7, 121, 2, 2, 230, 22, 3, 2, 2, 2, 231,
	232, 7, 99, 2, 2, 232, 233, 7, 117, 2, 2, 233, 24, 3, 2, 2, 2, 234, 235,
	7, 88, 2, 2, 235, 236, 7, 103, 2, 2, 236, 237, 7, 101, 2, 2, 237, 26, 3,
	2, 2, 2, 238, 239, 7, 120, 2, 2, 239, 240, 7, 103, 2, 2, 240, 241, 7, 101,
	2, 2, 241, 28, 3, 2, 2, 2, 242, 243, 7, 111, 2, 2, 243, 244, 7, 119, 2,
	2, 244, 245, 7, 118, 2, 2, 245, 30, 3, 2, 2, 2, 246, 247, 7, 110, 2, 2,
	247, 248, 7, 103, 2, 2, 248, 249, 7, 118, 2, 2, 249, 32, 3, 2, 2, 2, 250,
	251, 7, 117, 2, 2, 251, 252, 7, 118, 2, 2, 252, 253, 7, 116, 2, 2, 253,
	254, 7, 119, 2, 2, 254, 255, 7, 101, 2, 2, 255, 256, 7, 118, 2, 2, 256,
	34, 3, 2, 2, 2, 257, 258, 7, 118, 2, 2, 258, 259, 7, 113, 2, 2, 259, 260,
	7, 97, 2, 2, 260, 261, 7, 117, 2, 2, 261, 262, 7, 118, 2, 2, 262, 263,
	7, 116, 2, 2, 263, 264, 7, 107, 2, 2, 264, 265, 7, 112, 2, 2, 265, 266,
	7, 105, 2, 2, 266, 36, 3, 2, 2, 2, 267, 268, 7, 118, 2, 2, 268, 269, 7,
	113, 2, 2, 269, 270, 7, 97, 2, 2, 270, 271, 7, 113, 2, 2, 271, 272, 7,
	121, 2, 2, 272, 273, 7, 112, 2, 2, 273, 274, 7, 103, 2, 2, 274, 275, 7,
	102, 2, 2, 275, 38, 3, 2, 2, 2, 276, 277, 7, 118, 2, 2, 277, 278, 7, 116,
	2, 2, 278, 279, 7, 119, 2, 2, 279, 280, 7, 103, 2, 2, 280, 40, 3, 2, 2,
	2, 281, 282, 7, 104, 2, 2, 282, 283, 7, 99, 2, 2, 283, 284, 7, 110, 2,
	2, 284, 285, 7, 117, 2, 2, 285, 286, 7, 103, 2, 2, 286, 42, 3, 2, 2, 2,
	287, 288, 7, 114, 2, 2, 288, 289, 7, 116, 2, 2, 289, 290, 7, 107, 2, 2,
	290, 291, 7, 112, 2, 2, 291, 292, 7, 118, 2, 2, 292, 293, 7, 110, 2, 2,
	293, 294, 7, 112, 2, 2, 294, 44, 3, 2, 2, 2, 295, 296, 7, 104, 2, 2, 296,
	297, 7, 112, 2, 2, 297, 46, 3, 2, 2, 2, 298, 299, 7, 99, 2, 2, 299, 300,
	7, 100, 2, 2, 300, 301, 7, 117, 2, 2, 301, 48, 3, 2, 2, 2, 302, 303, 7,
	117, 2, 2, 303, 304, 7, 115, 2, 2, 304, 305, 7, 116, 2, 2, 305, 306, 7,
	118, 2, 2, 306, 50, 3, 2, 2, 2, 307, 308, 7, 101, 2, 2, 308, 309, 7, 110,
	2, 2, 309, 310, 7, 113, 2, 2, 310, 311, 7, 112, 2, 2, 311, 312, 7, 103,
	2, 2, 312, 52, 3, 2, 2, 2, 313, 314, 7, 112, 2, 2, 314, 315, 7, 103, 2,
	2, 315, 316, 7, 121, 2, 2, 316, 54, 3, 2, 2, 2, 317, 318, 7, 110, 2, 2,
	318, 319, 7, 103, 2, 2, 319, 320, 7, 112, 2, 2, 320, 56, 3, 2, 2, 2, 321,
	322, 7, 114, 2, 2, 322, 323, 7, 119, 2, 2, 323, 324, 7, 117, 2, 2, 324,
	325, 7, 106, 2, 2, 325, 58, 3, 2, 2, 2, 326, 327, 7, 116, 2, 2, 327, 328,
	7, 103, 2, 2, 328, 329, 7, 111, 2, 2, 329, 330, 7, 113, 2, 2, 330, 331,
	7, 120, 2, 2, 331, 332, 7, 103, 2, 2, 332, 60, 3, 2, 2, 2, 333, 334, 7,
	101, 2, 2, 334, 335, 7, 113, 2, 2, 335, 336, 7, 112, 2, 2, 336, 337, 7,
	118, 2, 2, 337, 338, 7, 99, 2, 2, 338, 339, 7, 107, 2, 2, 339, 340, 7,
	112, 2, 2, 340, 341, 7, 117, 2, 2, 341, 62, 3, 2, 2, 2, 342, 343, 7, 107,
	2, 2, 343, 344, 7, 112, 2, 2, 344, 345, 7, 117, 2, 2, 345, 346, 7, 103,
	2, 2, 346, 347, 7, 116, 2, 2, 347, 348, 7, 118, 2, 2, 348, 64, 3, 2, 2,
	2, 349, 350, 7, 101, 2, 2, 350, 351, 7, 99, 2, 2, 351, 352, 7, 114, 2,
	2, 352, 353, 7, 99, 2, 2, 353, 354, 7, 101, 2, 2, 354, 355, 7, 107, 2,
	2, 355, 356, 7, 118, 2, 2, 356, 357, 7, 123, 2, 2, 357, 66, 3, 2, 2, 2,
	358, 359, 7, 121, 2, 2, 359, 360, 7, 107, 2, 2, 360, 361, 7, 118, 2, 2,
	361, 362, 7, 106, 2, 2, 362, 363, 7, 97, 2, 2, 363, 364, 7, 101, 2, 2,
	364, 365, 7, 99, 2, 2, 365, 366, 7, 114, 2, 2, 366, 367, 7, 99, 2, 2, 367,
	368, 7, 101, 2, 2, 368, 369, 7, 107, 2, 2, 369, 370, 7, 118, 2, 2, 370,
	371, 7, 123, 2, 2, 371, 68, 3, 2, 2, 2, 372, 373, 7, 107, 2, 2, 373, 374,
	7, 104, 2, 2, 374, 70, 3, 2, 2, 2, 375, 376, 7, 103, 2, 2, 376, 377, 7,
	110, 2, 2, 377, 378, 7, 117, 2, 2, 378, 379, 7, 103, 2, 2, 379, 72, 3,
	2, 2, 2, 380, 381, 7, 111, 2, 2, 381, 382, 7, 99, 2, 2, 382, 383, 7, 118,
	2, 2, 383, 384, 7, 101, 2, 2, 384, 385, 7, 106, 2, 2, 385, 74, 3, 2, 2,
	2, 386, 387, 7, 110, 2, 2, 387, 388, 7, 113, 2, 2, 388, 389, 7, 113, 2,
	2, 389, 390, 7, 114, 2, 2, 390, 76, 3, 2, 2, 2, 391, 392, 7, 121, 2, 2,
	392, 393, 7, 106, 2, 2, 393, 394, 7, 107, 2, 2, 394, 395, 7, 110, 2, 2,
	395, 396, 7, 103, 2, 2, 396, 78, 3, 2, 2, 2, 397, 398, 7, 104, 2, 2, 398,
	399, 7, 113, 2, 2, 399, 400, 7, 116, 2, 2, 400, 80, 3, 2, 2, 2, 401, 402,
	7, 107, 2, 2, 402, 403, 7, 112, 2, 2, 403, 82, 3, 2, 2, 2, 404, 405, 7,
	116, 2, 2, 405, 406, 7, 103, 2, 2, 406, 407, 7, 118, 2, 2, 407, 408, 7,
	119, 2, 2, 408, 409, 7, 116, 2, 2, 409, 410, 7, 112, 2, 2, 410, 84, 3,
	2, 2, 2, 411, 412, 7, 100, 2, 2, 412, 413, 7, 116, 2, 2, 413, 414, 7, 103,
	2, 2, 414, 415, 7, 99, 2, 2, 415, 416, 7, 109, 2, 2, 416, 86, 3, 2, 2,
	2, 417, 418, 7, 101, 2, 2, 418, 419, 7, 113, 2, 2, 419, 420, 7, 112, 2,
	2, 420, 421, 7, 118, 2, 2, 421, 422, 7, 107, 2, 2, 422, 423, 7, 112, 2,
	2, 423, 424, 7, 119, 2, 2, 424, 425, 7, 103, 2, 2, 425, 88, 3, 2, 2, 2,
	426, 427, 7, 111, 2, 2, 427, 428, 7, 113, 2, 2, 428, 429, 7, 102, 2, 2,
	429, 90, 3, 2, 2, 2, 430, 431, 7, 114, 2, 2, 431, 432, 7, 119, 2, 2, 432,
	433, 7, 100, 2, 2, 433, 92, 3, 2, 2, 2, 434, 436, 9, 2, 2, 2, 435, 434,
	3, 2, 2, 2, 436, 437, 3, 2, 2, 2, 437, 435, 3, 2, 2, 2, 437, 438, 3, 2,
	2, 2, 438, 94, 3, 2, 2, 2, 439, 441, 9, 2, 2, 2, 440, 439, 3, 2, 2, 2,
	441, 442, 3, 2, 2, 2, 442, 440, 3, 2, 2, 2, 442, 443, 3, 2, 2, 2, 443,
	444, 3, 2, 2, 2, 444, 446, 7, 48, 2, 2, 445, 447, 9, 2, 2, 2, 446, 445,
	3, 2, 2, 2, 447, 448, 3, 2, 2, 2, 448, 446, 3, 2, 2, 2, 448, 449, 3, 2,
	2, 2, 449, 96, 3, 2, 2, 2, 450, 454, 9, 3, 2, 2, 451, 453, 9, 4, 2, 2,
	452, 451, 3, 2, 2, 2, 453, 456, 3, 2, 2, 2, 454, 452, 3, 2, 2, 2, 454,
	455, 3, 2, 2, 2, 455, 98, 3, 2, 2, 2, 456, 454, 3, 2, 2, 2, 457, 459, 9,
	4, 2, 2, 458, 457, 3, 2, 2, 2, 459, 463, 3, 2, 2, 2, 460, 462, 9, 5, 2,
	2, 461, 460, 3, 2, 2, 2, 462, 465, 3, 2, 2, 2, 463, 461, 3, 2, 2, 2, 463,
	464, 3, 2, 2, 2, 464, 100, 3, 2, 2, 2, 465, 463, 3, 2, 2, 2, 466, 467,
	7, 97, 2, 2, 467, 102, 3, 2, 2, 2, 468, 469, 7, 126, 2, 2, 469, 104, 3,
	2, 2, 2, 470, 471, 7, 126, 2, 2, 471, 472, 7, 126, 2, 2, 472, 106, 3, 2,
	2, 2, 473, 474, 7, 40, 2, 2, 474, 108, 3, 2, 2, 2, 475, 476, 7, 40, 2,
	2, 476, 477, 7, 40, 2, 2, 477, 110, 3, 2, 2, 2, 478, 479, 7, 60, 2, 2,
	479, 480, 7, 65, 2, 2, 480, 112, 3, 2, 2, 2, 481, 482, 7, 60, 2, 2, 482,
	483, 7, 60, 2, 2, 483, 114, 3, 2, 2, 2, 484, 485, 7, 60, 2, 2, 485, 116,
	3, 2, 2, 2, 486, 487, 7, 48, 2, 2, 487, 488, 7, 48, 2, 2, 488, 118, 3,
	2, 2, 2, 489, 490, 7, 48, 2, 2, 490, 120, 3, 2, 2, 2, 491, 492, 7, 46,
	2, 2, 492, 122, 3, 2, 2, 2, 493, 494, 7, 61, 2, 2, 494, 124, 3, 2, 2, 2,
	495, 496, 7, 64, 2, 2, 496, 497, 7, 63, 2, 2, 497, 126, 3, 2, 2, 2, 498,
	499, 7, 64, 2, 2, 499, 128, 3, 2, 2, 2, 500, 501, 7, 62, 2, 2, 501, 502,
	7, 63, 2, 2, 502, 130, 3, 2, 2, 2, 503, 504, 7, 62, 2, 2, 504, 132, 3,
	2, 2, 2, 505, 506, 7, 63, 2, 2, 506, 507, 7, 63, 2, 2, 507, 134, 3, 2,
	2, 2, 508, 509, 7, 63, 2, 2, 509, 510, 7, 64, 2, 2, 510, 136, 3, 2, 2,
	2, 511, 512, 7, 35, 2, 2, 512, 513, 7, 63, 2, 2, 513, 138, 3, 2, 2, 2,
	514, 515, 7, 63, 2, 2, 515, 140, 3, 2, 2, 2, 516, 517, 7, 39, 2, 2, 517,
	142, 3, 2, 2, 2, 518, 519, 7, 44, 2, 2, 519, 144, 3, 2, 2, 2, 520, 521,
	7, 49, 2, 2, 521, 146, 3, 2, 2, 2, 522, 523, 7, 47, 2, 2, 523, 524, 7,
	64, 2, 2, 524, 148, 3, 2, 2, 2, 525, 526, 7, 47, 2, 2, 526, 150, 3, 2,
	2, 2, 527, 528, 7, 45, 2, 2, 528, 152, 3, 2, 2, 2, 529, 530, 7, 35, 2,
	2, 530, 154, 3, 2, 2, 2, 531, 532, 7, 65, 2, 2, 532, 156, 3, 2, 2, 2, 533,
	534, 7, 42, 2, 2, 534, 158, 3, 2, 2, 2, 535, 536, 7, 43, 2, 2, 536, 160,
	3, 2, 2, 2, 537, 538, 7, 125, 2, 2, 538, 162, 3, 2, 2, 2, 539, 540, 7,
	127, 2, 2, 540, 164, 3, 2, 2, 2, 541, 542, 7, 93, 2, 2, 542, 166, 3, 2,
	2, 2, 543, 544, 7, 95, 2, 2, 544, 168, 3, 2, 2, 2, 545, 549, 7, 36, 2,
	2, 546, 548, 11, 2, 2, 2, 547, 546, 3, 2, 2, 2, 548, 551, 3, 2, 2, 2, 549,
	550, 3, 2, 2, 2, 549, 547, 3, 2, 2, 2, 550, 552, 3, 2, 2, 2, 551, 549,
	3, 2, 2, 2, 552, 553, 7, 36, 2, 2, 553, 170, 3, 2, 2, 2, 554, 555, 9, 6,
	2, 2, 555, 172, 3, 2, 2, 2, 556, 557, 7, 41, 2, 2, 557, 558, 5, 171, 86,
	2, 558, 559, 7, 41, 2, 2, 559, 174, 3, 2, 2, 2, 560, 562, 9, 7, 2, 2, 561,
	560, 3, 2, 2, 2, 562, 563, 3, 2, 2, 2, 563, 561, 3, 2, 2, 2, 563, 564,
	3, 2, 2, 2, 564, 565, 3, 2, 2, 2, 565, 566, 8, 88, 2, 2, 566, 176, 3, 2,
	2, 2, 567, 568, 7, 49, 2, 2, 568, 569, 7, 44, 2, 2, 569, 573, 3, 2, 2,
	2, 570, 572, 11, 2, 2, 2, 571, 570, 3, 2, 2, 2, 572, 575, 3, 2, 2, 2, 573,
	574, 3, 2, 2, 2, 573, 571, 3, 2, 2, 2, 574, 576, 3, 2, 2, 2, 575, 573,
	3, 2, 2, 2, 576, 577, 7, 44, 2, 2, 577, 578, 7, 49, 2, 2, 578, 579, 3,
	2, 2, 2, 579, 580, 8, 89, 2, 2, 580, 178, 3, 2, 2, 2, 581, 582, 7, 49,
	2, 2, 582, 583, 7, 49, 2, 2, 583, 587, 3, 2, 2, 2, 584, 586, 10, 8, 2,
	2, 585, 584, 3, 2, 2, 2, 586, 589, 3, 2, 2, 2, 587, 585, 3, 2, 2, 2, 587,
	588, 3, 2, 2, 2, 588, 590, 3, 2, 2, 2, 589, 587, 3, 2, 2, 2, 590, 591,
	8, 90, 2, 2, 591, 180, 3, 2, 2, 2, 15, 2, 437, 442, 448, 452, 454, 458,
	461, 463, 549, 563, 573, 587, 3, 8, 2, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'bool'", "'char'", "'f64'", "'i64'", "'&str'", "'String'", "'usize'",
	"'main'", "'powf'", "'pow'", "'as'", "'Vec'", "'vec'", "'mut'", "'let'",
	"'struct'", "'to_string'", "'to_owned'", "'true'", "'false'", "'println'",
	"'fn'", "'abs'", "'sqrt'", "'clone'", "'new'", "'len'", "'push'", "'remove'",
	"'contains'", "'insert'", "'capacity'", "'with_capacity'", "'if'", "'else'",
	"'match'", "'loop'", "'while'", "'for'", "'in'", "'return'", "'break'",
	"'continue'", "'mod'", "'pub'", "", "", "", "", "'_'", "'|'", "'||'", "'&'",
	"'&&'", "':?'", "'::'", "':'", "'..'", "'.'", "','", "';'", "'>='", "'>'",
	"'<='", "'<'", "'=='", "'=>'", "'!='", "'='", "'%'", "'*'", "'/'", "'->'",
	"'-'", "'+'", "'!'", "'?'", "'('", "')'", "'{'", "'}'", "'['", "']'",
}

var lexerSymbolicNames = []string{
	"", "BOOL", "CHAR", "F64", "I64", "STR", "STRING", "USIZE", "MAIN", "POWF",
	"POW", "AS", "VEC", "VEC_M", "MUT", "LET", "STRUCT", "TO_STRING", "TO_OWNED",
	"TRUE", "FALSE", "PRINT", "FN", "ABS", "SQRT", "CLONE", "NEW", "LEN", "PUSH",
	"REMOVE", "CONTAINS", "INSERT", "CAPACITY", "WITH_CAPACITY", "IF", "ELSE",
	"MATCH", "LOOP", "WHILE", "FOR", "IN", "RETURN", "BREAK", "CONTINUE", "MOD",
	"PUB", "NUMERO", "DECIMAL", "ID_CAMEL", "ID", "DEFAULT", "O", "OR", "AMPERSAND",
	"AND", "PRINT_OP_DEBUG", "DOBLE_DOSPUNTOS", "DOSPUNTOS", "RANGO", "PUNTO",
	"COMA", "PUNTOCOMA", "MAYOR_I", "MAYOR", "MENOR_I", "MENOR", "IGUALDAD",
	"CASE", "DISTINTO", "IGUAL", "MODULO", "MULTIPLICACION", "DIVISION", "FN_TIPO_RETORNO",
	"RESTA", "SUMA", "NOT", "PREGUNTA", "PAR_IZQ", "PAR_DER", "LLAVE_IZQ",
	"LLAVE_DER", "CORCHETE_IZQ", "CORCHETE_DER", "CADENA", "ASCII", "CARACTER",
	"WHITESPACE", "COMMENT", "LINE_COMMENT",
}

var lexerRuleNames = []string{
	"BOOL", "CHAR", "F64", "I64", "STR", "STRING", "USIZE", "MAIN", "POWF",
	"POW", "AS", "VEC", "VEC_M", "MUT", "LET", "STRUCT", "TO_STRING", "TO_OWNED",
	"TRUE", "FALSE", "PRINT", "FN", "ABS", "SQRT", "CLONE", "NEW", "LEN", "PUSH",
	"REMOVE", "CONTAINS", "INSERT", "CAPACITY", "WITH_CAPACITY", "IF", "ELSE",
	"MATCH", "LOOP", "WHILE", "FOR", "IN", "RETURN", "BREAK", "CONTINUE", "MOD",
	"PUB", "NUMERO", "DECIMAL", "ID_CAMEL", "ID", "DEFAULT", "O", "OR", "AMPERSAND",
	"AND", "PRINT_OP_DEBUG", "DOBLE_DOSPUNTOS", "DOSPUNTOS", "RANGO", "PUNTO",
	"COMA", "PUNTOCOMA", "MAYOR_I", "MAYOR", "MENOR_I", "MENOR", "IGUALDAD",
	"CASE", "DISTINTO", "IGUAL", "MODULO", "MULTIPLICACION", "DIVISION", "FN_TIPO_RETORNO",
	"RESTA", "SUMA", "NOT", "PREGUNTA", "PAR_IZQ", "PAR_DER", "LLAVE_IZQ",
	"LLAVE_DER", "CORCHETE_IZQ", "CORCHETE_DER", "CADENA", "ASCII", "CARACTER",
	"WHITESPACE", "COMMENT", "LINE_COMMENT",
}

type Nlexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewNlexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *Nlexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewNlexer(input antlr.CharStream) *Nlexer {
	l := new(Nlexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "Nlexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// Nlexer tokens.
const (
	NlexerBOOL            = 1
	NlexerCHAR            = 2
	NlexerF64             = 3
	NlexerI64             = 4
	NlexerSTR             = 5
	NlexerSTRING          = 6
	NlexerUSIZE           = 7
	NlexerMAIN            = 8
	NlexerPOWF            = 9
	NlexerPOW             = 10
	NlexerAS              = 11
	NlexerVEC             = 12
	NlexerVEC_M           = 13
	NlexerMUT             = 14
	NlexerLET             = 15
	NlexerSTRUCT          = 16
	NlexerTO_STRING       = 17
	NlexerTO_OWNED        = 18
	NlexerTRUE            = 19
	NlexerFALSE           = 20
	NlexerPRINT           = 21
	NlexerFN              = 22
	NlexerABS             = 23
	NlexerSQRT            = 24
	NlexerCLONE           = 25
	NlexerNEW             = 26
	NlexerLEN             = 27
	NlexerPUSH            = 28
	NlexerREMOVE          = 29
	NlexerCONTAINS        = 30
	NlexerINSERT          = 31
	NlexerCAPACITY        = 32
	NlexerWITH_CAPACITY   = 33
	NlexerIF              = 34
	NlexerELSE            = 35
	NlexerMATCH           = 36
	NlexerLOOP            = 37
	NlexerWHILE           = 38
	NlexerFOR             = 39
	NlexerIN              = 40
	NlexerRETURN          = 41
	NlexerBREAK           = 42
	NlexerCONTINUE        = 43
	NlexerMOD             = 44
	NlexerPUB             = 45
	NlexerNUMERO          = 46
	NlexerDECIMAL         = 47
	NlexerID_CAMEL        = 48
	NlexerID              = 49
	NlexerDEFAULT         = 50
	NlexerO               = 51
	NlexerOR              = 52
	NlexerAMPERSAND       = 53
	NlexerAND             = 54
	NlexerPRINT_OP_DEBUG  = 55
	NlexerDOBLE_DOSPUNTOS = 56
	NlexerDOSPUNTOS       = 57
	NlexerRANGO           = 58
	NlexerPUNTO           = 59
	NlexerCOMA            = 60
	NlexerPUNTOCOMA       = 61
	NlexerMAYOR_I         = 62
	NlexerMAYOR           = 63
	NlexerMENOR_I         = 64
	NlexerMENOR           = 65
	NlexerIGUALDAD        = 66
	NlexerCASE            = 67
	NlexerDISTINTO        = 68
	NlexerIGUAL           = 69
	NlexerMODULO          = 70
	NlexerMULTIPLICACION  = 71
	NlexerDIVISION        = 72
	NlexerFN_TIPO_RETORNO = 73
	NlexerRESTA           = 74
	NlexerSUMA            = 75
	NlexerNOT             = 76
	NlexerPREGUNTA        = 77
	NlexerPAR_IZQ         = 78
	NlexerPAR_DER         = 79
	NlexerLLAVE_IZQ       = 80
	NlexerLLAVE_DER       = 81
	NlexerCORCHETE_IZQ    = 82
	NlexerCORCHETE_DER    = 83
	NlexerCADENA          = 84
	NlexerASCII           = 85
	NlexerCARACTER        = 86
	NlexerWHITESPACE      = 87
	NlexerCOMMENT         = 88
	NlexerLINE_COMMENT    = 89
)
